amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "differential"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /Odometry
    bt_loop_duration: 10
    default_server_timeout: 20
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    # - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    # - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    # - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    # - nav2_remove_passed_goals_action_bt_node
    # - nav2_planner_selector_bt_node
    # - nav2_controller_selector_bt_node
    # - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001  # 为阿克曼转向减小
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25  # 减小以提高精度
    FollowPath:
      plugin: teb_local_planner::TebLocalPlannerROS
      
      # 轨迹相关参数
      teb_autosize: 1.0
      dt_ref: 0.3  # 减小以提高响应性
      dt_hysteresis: 0.03
      max_samples: 500
      global_plan_overwrite_orientation: True  # 更改为True以使用全局规划的方向
      allow_init_with_backwards_motion: True
      max_global_plan_lookahead_dist: 3.0
      force_reinit_new_goal_dist: 1.0
      force_reinit_new_goal_angular: 0.78
      feasibility_check_no_poses: 5
      publish_feedback: False
      
      # 机器人参数
      max_vel_x: 1.5  # 降低最大速度
      max_vel_x_backwards: 0.5  # 降低后退速度
      max_vel_theta: 1.5  # 降低最大转向速度
      acc_lim_x: 0.5  # 降低加速度限制
      acc_lim_theta: 0.5
      
      # 阿克曼车辆特定参数
      min_turning_radius: 0.85  # 基于轴距设置最小转弯半径
      wheelbase: 0.4  # 设置轴距
      cmd_angle_instead_rotvel: True  # 更改为发布转向角
      
      # 目标容差
      xy_goal_tolerance: 0.2
      yaw_goal_tolerance: 0.1
      free_goal_vel: False
      
      # 障碍物参数
      min_obstacle_dist: 0.3
      inflation_dist: 0.6
      include_costmap_obstacles: True
      costmap_obstacles_behind_robot_dist: 1.0
      obstacle_poses_affected: 15
      
      # 优化参数
      no_inner_iterations: 5
      no_outer_iterations: 4
      optimization_activate: True
      optimization_verbose: False
      penalty_epsilon: 0.1
      weight_max_vel_x: 2.0
      weight_max_vel_theta: 1.0
      weight_acc_lim_x: 1.0
      weight_acc_lim_theta: 1.0
      weight_kinematics_nh: 1000.0  # 增加非完整运动学约束的权重
      weight_kinematics_forward_drive: 1.0
      weight_kinematics_turning_radius: 1.0
      weight_optimaltime: 1.0
      weight_obstacle: 50.0
      weight_viapoint: 1.0
      
      # 恢复行为
      shrink_horizon_backup: True
      oscillation_recovery: True

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 20.0
      publish_frequency: 10.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.02
      robot_radius: 0.385
      plugins: ["obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          raytrace_max_range: 6.0
          obstacle_max_range: 6.0
          obstacle_min_range: 0.1
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          inf_is_valid: true
          data_type: "LaserScan"
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.7
      always_send_full_costmap: true
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      robot_radius: 0.385
      resolution: 0.04
      track_unknown_space: true
      plugins: ["static_layer", "stvl_layer", "inflation_layer"]
      stvl_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        # https://github.com/SteveMacenski/spatio_temporal_voxel_layer
        enabled:                  true
        voxel_decay:              0.5                               # 如果是线性衰减，单位为秒；如果是指数衰减，则为 e 的 n 次方
        decay_model:              0                                 # 衰减模型，0=线性，1=指数，-1=持久
        voxel_size:               0.05                              # 每个体素的尺寸，单位为米
        track_unknown_space:      true                              # default space is unknown
        mark_threshold:           0                                 # voxel height
        update_footprint_enabled: true
        combination_method:       1                                 # 1=max, 0=override
        origin_z:                 0.0                               # 单位为米
        publish_voxel_map:        true                              # default false, 是否发布体素地图
        transform_tolerance:      0.2                               # 单位为秒
        mapping_mode:             false                             # default off, saves map not for navigation
        map_save_duration:        60.0                              # default 60s, how often to autosave
        observation_sources:      livox_mark livox_clear
        livox_mark:
          data_type: PointCloud2
          topic: /segmentation/obstacle
          marking: true
          clearing: false
          obstacle_range: 3.0                                       # meters
          min_obstacle_height: 0.2                                  # default 0, meters
          max_obstacle_height: 2.0                                  # default 3, meters
          expected_update_rate: 0.0                                 # default 0, if not updating at this rate at least, remove from buffer
          observation_persistence: 0.0                              # default 0, use all measurements taken during now-value, 0=latest
          inf_is_valid: false                                       # default false, for laser scans
          filter: "voxel"                                           # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommend on
          voxel_min_points: 0                                       # default 0, minimum points per voxel for voxel filter
          clear_after_reading: true                                 # default false, clear the buffer after the layer gets readings from it
        livox_clear:
          enabled: true                                             # default true, can be toggled on/off with associated service call
          data_type: PointCloud2
          topic: /segmentation/obstacle
          marking: false
          clearing: true
          max_z: 8.0                                                # default 10, meters
          min_z: 1.0                                                # default 0, meters
          vertical_fov_angle: 1.029                                 # 垂直视场角，单位为弧度，For 3D lidars it's the symmetric FOV about the planar axis.
          vertical_fov_padding: 0.05                                # 3D Lidar only. Default 0, in meters
          horizontal_fov_angle: 6.29                                # 3D 激光雷达水平视场角
          decay_acceleration: 5.0                                   # default 0, 1/s^2.
          model_type: 1                                             # 0=深度相机，1=3D激光雷达
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        footprint_clearing_enabled: True
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 8.0
        inflation_radius: 0.7
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 1.0  # 降低频率，因为阿克曼车辆的规划不需要那么频繁
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "smac_planner/SmacPlanner2D"  # 使用更适合阿克曼车辆的规划器
      tolerance: 0.5
      allow_unknown: true
      max_iterations: 1000000  # 增加最大迭代次数，以找到更好的路径
      max_on_approach_iterations: 1000
      max_planning_time: 5.0  # 增加最大规划时间
      motion_model_for_search: "DUBIN"  # 使用Dubin曲线模型，适合阿克曼车辆
      cost_travel_multiplier: 2.0  # 增加移动代价，使规划器更倾向于平滑路径
      angle_quantization_bins: 64  # 增加角度量化的分辨率
      minimum_turning_radius: 0.85  # 设置最小转弯半径，根据您的车辆实际情况调整
      reverse_penalty: 2.0  # 对倒车进行惩罚，但仍允许必要时使用
      change_direction_penalty: 0.5  # 对改变方向进行轻微惩罚
      non_straight_penalty: 1.2  # 对非直线路径进行轻微惩罚，鼓励更直的路径
      cost_penalty: 2.0  # 增加代价惩罚，使规划器更倾向于寻找更优路径

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 2.0
    recovery_plugins: ["wait", "backup"]  # 移除 "spin"，添加 "wait"
    wait:
      plugin: "nav2_recoveries/Wait"
      wait_duration: 5.0  # 等待5秒
    backup:
      plugin: "nav2_recoveries/BackUp"
      speed: 0.3  # 降低后退速度
      acceleration: 0.1  # 降低加速度
      distance: 0.5  # 减少后退距离
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0  # 增加模拟时间
    max_rotational_vel: 0.5  # 大幅降低最大旋转速度
    min_rotational_vel: 0.1  # 降低最小旋转速度
    rotational_acc_lim: 0.2  # 降低旋转加速度限制

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [2.0, 0.0, 0.5]  # [前进, 横向, 旋转]
    min_velocity: [-1.0, 0.0, -0.5]  # [后退, 横向, 旋转]
    deadband_velocity: [0.05, 0.0, 0.05]
    velocity_timeout: 1.0
    max_accel: [0.5, 0.0, 0.4]
    max_decel: [-0.5, 0.0, -0.4]
    odom_topic: "/Odometry"  #
    odom_duration: 0.1

robot_state_publisher:
  ros__parameters:
    use_sim_time: False
